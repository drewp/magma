#!/usr/bin/python
"""
gather all the supervisord.conf files and make sensu checks for all
services plus a web page with links to all services

the sensu checks may be http GET to the service itself, or a
supervisor xmlrpc check to see if the service process is running
(usually a weaker test)
"""
import xmlrpclib, subprocess, json, sys


def getServices(host):
    addr = "http://%s:9001" % host
    if host == "bang-local":
        host = 'bang'
        addr = "http://bang:9002"
    supervisor = xmlrpclib.Server(addr).supervisor
    def maybePortnum(name):
        if name == 'nginx':
            return 80
        tail = row['name'].split('_')[-1]
        try:
            return int(tail)
        except ValueError:
            return None
    def checkName(r):
        if r['group'] != r['name']:
            return '%(group)s:%(name)s' % r
        return r['name']
    try:
        return [{'host' : host, 
                 'supervisorPort' : int(addr.split(':')[-1]), 
                 'servicePort' : maybePortnum(row['name']),
                 'name' : row['name'],
                 'checkName' : checkName(row),
                } for row in supervisor.getAllConfigInfo()]
    except:
        print >>sys.stderr, "talking to %s:" % host
        raise
def getAllServices():
    return sum((getServices(h) for h in ['bang', 'bang-local', 'dash', 'slash', 'star']), [])


svcs = getAllServices()

checks = {}

for svc in svcs:
    checks['supervisor-%(host)s-%(name)s' % svc] = {
        'subscribers':['host-bang'], # sic- all checks can be run from here
        'aggregate' : True,
        'interval':900,
        'command':'supervisor_check %(host)s %(supervisorPort)s %(checkName)s' % svc}

        
out = open(sys.argv[1], "w")
out.write('{"note" : "autogenerated by services_list", "checks": {\n')
items = sorted(checks.items())
for name, body in items:
    out.write('\n  %s: %s' % (json.dumps(name), json.dumps(body)))
    if name != items[-1][0]:
        out.write(",")
out.write('}}')
out.close()


try:
    from genshi.template import TemplateLoader
except ImportError:
    print "no genshi; skipping html outputs"
else:
    loader = TemplateLoader(["."])
    tmpl = loader.load('services_list.html')
    byHost = {}
    for svc in svcs:
        if svc['servicePort'] is None:
            continue
        byHost.setdefault(svc['host'], []).append(svc)
    stream = tmpl.generate(
        byHost=byHost,
        )

    f = open("/my/site/magma/build_services.html", "w")
    f.write(stream.render())
    f.close()

