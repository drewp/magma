#!buildout_bin/py
import os, sys
from twisted.internet import reactor
from twisted.python import log
from twisted.python.util import sibpath
from twisted.web.client import getPage
from twisted.internet.defer import inlineCallbacks, returnValue
from nevow.appserver import NevowSite
from nevow import rend, static, loaders, tags as T, inevow, json
from nevowopenid import WithOpenid, getSessionDict
from rdflib.Graph import Graph
from rdflib import URIRef, Literal, Namespace, Variable
from commandinference.dbclient import nowLiteral, getCommandLog

"""
need ajaxy supervisor interface

this should use openid, with an extra list of magic query params that
also fire the same identity=drewp code that openid can finish
with. then we bookmark the magic urls in our phones

"""

CMD = Namespace("http://bigasterisk.com/ns/command/v1#")

#os.chdir("/my/site/magma")

class Running(rend.Page):
    docFactory = loaders.stan(T.img(src="out"))
    def child_out(self, ctx):
        return static.File("running/out.png")

class Main(rend.Page, WithOpenid):
    def __init__(self, cmdlog):
        self.cmdlog = cmdlog
    def child_(self, ctx):
        import homepage
        reload(homepage)
        p = homepage.HomePage(self.cmdlog, self.identity)
        return p

    # these are dumb; just for reload
    def child_addCommand(self, ctx):
        import homepage
        reload(homepage)
        p = homepage.HomePage(self.cmdlog, self.identity)
        return p.child_addCommand(ctx)

    def child_babyKick(self, ctx):
        import homepage
        reload(homepage)
        p = homepage.HomePage(self.cmdlog, self.identity)
        return p.child_babyKick(ctx)
    
    def getOpenidIdentity(self, ctx):
        req = inevow.IRequest(ctx)
        if req.path == '/signin':
            ident = self.identityFromDirectSignin(ctx.arg('d'))
            getSessionDict(ctx)['identity'] = ident
            return ident
            
        return WithOpenid.getOpenidIdentity(self, ctx)

    def identityFromDirectSignin(self, code):
        """a mode for treo cell phones that can't remember
        cookies. They use an https URL with a 'direct login code'
        right in it, which we then authorize as an identity and
        proceed as if it was an openid login.
        """
        rows = list(self.cmdlog.graph.queryd(
          "SELECT ?id WHERE { ?pers cl:openid ?id ; cl:directLoginCode ?code }",
            initBindings={Variable('code') : Literal(code)}))
        if not rows:
            raise ValueError("no login known for URL code")
        return rows[0]['id']
    
    def child_signin(self, ctx):
        # signin page action happens above; this is only a redirect at the end
        inevow.IRequest(ctx).redirect('http://bigasterisk.com/magma/')
        return ''

    def verifyIdentity(self):
        return # everyone's ok, they just won't get many commands
        # junk:
        #if (URIRef(self.identity), CMD.perm, CMD.allowed) not in self.graph:
        #    raise ValueError("not authorized")

    def fullUrl(self, ctx):
        request = inevow.IRequest(ctx)
        return 'http://bigasterisk.com/magma' + request.path
    
    def child_running(self, ctx):
        return Running()
    def child_net(self, ctx):
        return static.File("nets.html")
    def child_images(self, ctx):
        return static.File("images")
    def child_www(self, ctx):
        return static.File('../room/www')

setattr(Main, "child_dojo-0.4.2-ajax", static.File("dojo-0.4.2-ajax"))

log.startLogging(sys.stdout)

#graph = Graph()
#for f in ['auth.n3', 'datapoint.n3']:
#    graph.parse("commandinference/%s" % f, format="n3")


cmdlog = getCommandLog()

reactor.listenTCP(8006, NevowSite(Main(cmdlog)))
reactor.run()
