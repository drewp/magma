#!/usr/bin/python
import os, sys
from twisted.internet import reactor
from twisted.python import log
from twisted.python.util import sibpath
from twisted.web.client import getPage
from twisted.internet.defer import inlineCallbacks, returnValue
from nevow.appserver import NevowSite
from nevow import rend, static, loaders, tags as T, inevow, json


"""
need ajaxy supervisor interface

"""

os.chdir("/my/site/magma")

class Running(rend.Page):
    docFactory = loaders.stan(T.img(src="out"))
    def child_out(self, ctx):
        return static.File("running/out.png")

class Main(rend.Page):
    docFactory = loaders.xmlfile("magma-sample2.html")
    # if this is from a phone, use the little menu. the big menu
    # should also be ext, and have links to all the inner services.
    
    def child_running(self, ctx):
        return Running()
    def child_net(self, ctx):
        return static.File("nets.html")
    def child_images(self, ctx):
        return static.File("images")

    @inlineCallbacks
    def render_lights(self, ctx, data):

        @inlineCallbacks
        def line(queryName, label):
            ret = json.parse((yield getPage(
                "http://bigasterisk.com/magma/light/state?name=%s" % queryName,
                headers={'Authorization' :
                         inevow.IRequest(ctx).getHeader('Authorization')})))

            currently = ret['value']
            returnValue(T.form(method="POST", action="light/state")[
                T.input(type="hidden", name="name", value=queryName),
                T.div[label, " ", T.span[currently], ", turn ",
                      T.input(type="submit", name="value",
                              value="off" if currently=='on' else "on")]])

        # deferredlist!
        returnValue([(yield line("bedroomred", "bedroom light")),
                     (yield line("deck", "deck lights"))])
    
setattr(Main, "child_dojo-0.4.2-ajax", static.File("dojo-0.4.2-ajax"))

log.startLogging(sys.stdout)

reactor.listenTCP(8006, NevowSite(Main()))
reactor.run()
