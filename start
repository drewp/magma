#!buildout_bin/py
import os, sys
from twisted.internet import reactor
from twisted.python import log
from twisted.python.util import sibpath
from twisted.web.client import getPage
from twisted.internet.defer import inlineCallbacks, returnValue
from nevow.appserver import NevowSite
from nevow import rend, static, loaders, tags as T, inevow, json
from rdflib.Graph import Graph
from rdflib import URIRef, Literal, Namespace, Variable
from commandinference.dbclient import nowLiteral, getCommandLog

"""
need ajaxy supervisor interface
"""

CMD = Namespace("http://bigasterisk.com/ns/command/v1#")

#os.chdir("/my/site/magma")

from homepage import foafAgent

class Main(rend.Page):
    def __init__(self, cmdlog):
        self.cmdlog = cmdlog
        
    def child_(self, ctx):
        import homepage
        reload(homepage)
        p = homepage.HomePage(self.cmdlog, foafAgent(ctx))
        return p
        
    def fullUrl(self, ctx):
        request = inevow.IRequest(ctx)
        return 'http://bigasterisk.com/magma' + request.path
    
    def locateChild(self, ctx, segments):
        import homepage
	reload(homepage)
        return homepage.HomePage(self.cmdlog, foafAgent(ctx)).locateChild(ctx, segments)


log.startLogging(sys.stdout)

#graph = Graph()
#for f in ['auth.n3', 'datapoint.n3']:
#    graph.parse("commandinference/%s" % f, format="n3")


cmdlog = getCommandLog()

reactor.listenTCP(8006, NevowSite(Main(cmdlog)))
reactor.run()
