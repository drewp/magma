#!buildout_bin/py
import os, sys
from twisted.internet import reactor
from twisted.python import log
from twisted.python.util import sibpath
from twisted.web.client import getPage
from twisted.internet.defer import inlineCallbacks, returnValue
from nevow.appserver import NevowSite
from nevow import rend, static, loaders, tags as T, inevow, json
from rdflib.Graph import Graph
from rdflib import URIRef, Literal, Namespace, Variable
from commandinference.dbclient import nowLiteral, getCommandLog

"""
need ajaxy supervisor interface
"""

CMD = Namespace("http://bigasterisk.com/ns/command/v1#")

#os.chdir("/my/site/magma")

class Running(rend.Page):
    docFactory = loaders.stan(T.img(src="out"))
    def child_out(self, ctx):
        return static.File("running/out.png")

def foafAgent(ctx):
    h = inevow.IRequest(ctx).getHeader('x-foaf-agent')
    assert h is not None, "no foaf agent"
    return URIRef(h)

class Main(rend.Page):
    def __init__(self, cmdlog):
        self.cmdlog = cmdlog
        
    def child_(self, ctx):
        import homepage
        reload(homepage)
        p = homepage.HomePage(self.cmdlog, foafAgent(ctx))
        return p

    def child_microblogUpdate(self, ctx):
        import microblog, homepage
        reload(microblog)
        req = inevow.IRequest(ctx)
        return microblog.postAll(self.cmdlog.graph,
                                 foafAgent(ctx),
                                 ctx.arg('msg'))

    def fullUrl(self, ctx):
        request = inevow.IRequest(ctx)
        return 'http://bigasterisk.com/magma' + request.path
    
    def child_running(self, ctx):
        return Running()
    def child_net(self, ctx):
        return static.File("nets.html")
    def child_images(self, ctx):
        return static.File("images")
    def child_www(self, ctx):
        return static.File('/my/proj/room/www')
    def child_tango(self, ctx):
        return static.File('/usr/share/icons/Tango/32x32')

for cmd in ['addCommand', 'babyKick', 'babyTable', 'garage']:
    # too scared to touch locateChild on the openid page

    def newchild(self, ctx, cmd=cmd):
        import homepage
        reload(homepage)
        p = homepage.HomePage(self.cmdlog, foafAgent(ctx))
        return getattr(p, 'child_%s' % cmd)(ctx)

    setattr(Main, 'child_%s' % cmd, newchild)
    

setattr(Main, "child_dojo-0.4.2-ajax", static.File("dojo-0.4.2-ajax"))
setattr(Main, "child_tomato_config.js", static.File("/my/site/magma/tomato_config.js"))

log.startLogging(sys.stdout)

#graph = Graph()
#for f in ['auth.n3', 'datapoint.n3']:
#    graph.parse("commandinference/%s" % f, format="n3")


cmdlog = getCommandLog()

reactor.listenTCP(8006, NevowSite(Main(cmdlog)))
reactor.run()
