#!/usr/bin/python
from __future__ import division
import os, sys, re
from twisted.internet import reactor
from twisted.python import log
from twisted.python.util import sibpath
from nevow.appserver import NevowSite
from nevow import rend, static, loaders, tags as T, inevow, json
import commands
from zfsparse import toGigabytes

os.chdir("/my/site/magma")

class Main(rend.Page):
    docFactory = loaders.stan(T.html[T.head[T.style['''
    * { font-family: sans-serif; }
    table { border-collapse: collapse; }
    td, th { border: 1px solid gray; padding: .2em; text-align: left; }
    td.num { text-align: right; }
    span.unit { color: gray; }
    '''],
                                            ],
                                     T.body[T.p["ZFS"],
                                            T.directive('content')]])
    def render_content(self, ctx, data):
        zlist = commands.getoutput("/usr/local/sbin/zfs list -H")

        zlist = toGigabytes(zlist)
        
        rows = []
        for line in zlist.splitlines():
            name, used, avail, refer, mnt = line.split('\t')
            rows.append(T.tr[T.td[name],
                             T.td(class_="num")[used],
                             T.td(class_="num")[avail],
                             T.td(class_="num")[refer],
                             T.td[mnt]])
        spaceList = T.table[T.tr[T.th['name'],
                                 T.th['used (G)'],
                                 T.th['avail (G)'],
                                 T.th['refer (G)'],
                                 T.th['mount']],
                            rows]

        errs = commands.getoutput("/usr/local/sbin/zpool status -x")
        return [spaceList,
                T.pre[errs]]
    


log.startLogging(sys.stdout)
reactor.listenTCP(8001, NevowSite(Main()))
reactor.run()
